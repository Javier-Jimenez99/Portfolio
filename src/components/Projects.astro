---
import { Github, ExternalLink } from 'lucide-astro';

const projects = [
  {
    id: 1,
    title: "OwlBear LLM Chat ‚Äî AI Game Master (MCP / multi-agent)",
    goal: "Make a conversational Game Master that plans, retrieves lore, manages the tabletop (dices, tokens, fog), and narrates scenes for tabletop RPGs.",
    approach: "Langgraph ReAct agent that uses MCP tools connected with the OwlBear API.",
    whatIBuilt: [
      "React Agent to interact with the tabletop.",
      "Chat to talk with the players to manage lore and actions.",
      "MCP server on Gradio with custom tools for dice, tokens, fog of war, rules, lore retrieval, and scene narration.",
    ],
    techStack: "Python, LangGraph, MCP, Anthropic, Gradio, Hugging Face",
    github: "https://github.com/Agamador/OwlBear-llm-chat",
    demo: "https://huggingface.co/spaces/Agents-MCP-Hackathon/LLM-GameMaster-Agent",
    icon: "üèÜ"
  },
  {
    id: 2,
    title: "Gatherer Sage ‚Äî Magic: The Gathering rules & strategy assistant",
    goal: "Provide rules-correct answers and card/line analysis for MTG, with sourceable citations.",
    approach: "Domain index of r/mtgrules Q&A and card text; retrieval + constrained generation for rules; optional fine-tuning experiments for jargon.",
    whatIBuilt: [
      "Data ingestion + cleaning with SoTA techniques (cards, ruling PDFs, forum Q&A).",
      "Retrieval pipeline with rules-first prompts (RAG-style).",
      "Fine-tune models on custom MTG data for jargon and strategy with huge amounts of data."
    ],
    techStack: "Python, Hugging Face, vLLM, Pinecone, PyTorch",
    github: "https://github.com/Javier-Jimenez99/gatherer-sage",
    demo: null,
    icon: "üÉè"
  },
  {
    id: 3,
    title: "JokerNet ‚Äî Gameplay automation & CV",
    goal: "Explore computer-vision + LLM agents for gameplay automation in Balatro rogue like.",
    approach: "Screen capture ‚Üí detection/classification ‚Üí action planner ‚Üí action executor",
    whatIBuilt: [
      "Docker environment to run the game and interact with it, in a secure way.",
      "Feature extractors and heuristics for state; simple rule-policies for actions.",
      "Complex LangGraph agent to plan actions from state, with tool-use for multimodal LLMs.",
    ],
    techStack: "Python, LangChain, LangGraph, OpenAI, Streamlit, Docker",
    github: "https://github.com/Javier-Jimenez99/JokerNet",
    demo: null,
    icon: "üßô‚Äç‚ôÇÔ∏è"
  }
];

const otherProjects = [
  {
    title: "Animdle",
    description: "Wordle-style anime guessing game with OP/ED clips.",
    demo: "https://animdle.com",
    icon: "üéå"
  }
];
---

<section id="projects" class="py-20 bg-slate-50 dark:bg-gray-900">
  <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
    <div class="text-center mb-16">
      <h2 class="text-3xl sm:text-4xl font-bold text-gray-900 dark:text-white mb-4">
        Flagship Projects
      </h2>
      <p class="text-xl text-gray-600 dark:text-gray-400 max-w-3xl mx-auto mb-2">
        AI √ó Gaming/Esports
      </p>
      <p class="text-lg text-gray-500 dark:text-gray-500 max-w-3xl mx-auto">
        Mini case studies of my LLM systems for gaming applications
      </p>
    </div>

    <!-- Flagship Projects -->
    <div class="space-y-12 mb-16">
      {projects.map((project) => (
        <div class="bg-white dark:bg-gray-800 rounded-2xl shadow-lg border border-gray-200 dark:border-gray-700 p-8">
          <div class="flex items-start space-x-4 mb-6">
            <div class="text-4xl">{project.icon}</div>
            <h3 class="text-2xl font-bold text-gray-900 dark:text-white leading-tight">{project.title}</h3>
          </div>
          
          <div class="grid grid-cols-1 lg:grid-cols-3 gap-6 lg:gap-8">
            <div>
              <h4 class="text-lg font-semibold text-blue-600 dark:text-blue-400 mb-3">Goal</h4>
              <p class="text-gray-700 dark:text-gray-300 leading-relaxed text-sm lg:text-base">{project.goal}</p>
            </div>
            
            <div>
              <h4 class="text-lg font-semibold text-purple-600 dark:text-purple-400 mb-3">Approach</h4>
              <p class="text-gray-700 dark:text-gray-300 leading-relaxed text-sm lg:text-base">{project.approach}</p>
            </div>
            
            <div>
              <h4 class="text-lg font-semibold text-green-600 dark:text-green-400 mb-3">What I built</h4>
              <ul class="space-y-2">
                {project.whatIBuilt.map((item) => (
                  <li class="flex items-start space-x-2">
                    <span class="text-green-600 dark:text-green-400 mt-1 flex-shrink-0">‚Ä¢</span>
                    <span class="text-gray-700 dark:text-gray-300 text-sm leading-relaxed">{item}</span>
                  </li>
                ))}
              </ul>
            </div>
          </div>
          
          <div class="flex flex-col sm:flex-row sm:items-center sm:justify-between mt-8 pt-6 border-t border-gray-200 dark:border-gray-600 gap-4">
            <div class="flex-1">
              <span class="text-sm font-medium text-gray-500 dark:text-gray-400">Tech Stack: </span>
              <span class="text-sm font-medium text-blue-600 dark:text-blue-400">{project.techStack}</span>
            </div>
            
            <div class="flex flex-col sm:flex-row gap-3 sm:gap-4">
              {project.github && (
                <a
                  href={project.github}
                  target="_blank"
                  rel="noopener noreferrer"
                  class="inline-flex items-center space-x-2 px-4 py-2 bg-gray-900 dark:bg-gray-700 text-white text-sm rounded-lg hover:bg-gray-800 dark:hover:bg-gray-600 transition-colors"
                >
                  <Github class="w-4 h-4" />
                  <span>Code</span>
                </a>
              )}
              
              {project.demo && (
                <a
                  href={project.demo}
                  target="_blank"
                  rel="noopener noreferrer"
                  class="inline-flex items-center space-x-2 px-4 py-2 bg-blue-600 text-white text-sm rounded-lg hover:bg-blue-700 transition-colors"
                >
                  <ExternalLink class="w-4 h-4" />
                  <span>Demo</span>
                </a>
              )}
            </div>
          </div>
        </div>
      ))}
    </div>
    
    <!-- Other Projects -->
    <div>
      <h3 class="text-2xl font-bold text-gray-900 dark:text-white mb-8 text-center">Other projects</h3>
      <div class="max-w-md mx-auto">
        {otherProjects.map((project) => (
          <div class="bg-white dark:bg-gray-800 rounded-xl shadow-md border border-gray-200 dark:border-gray-700 p-6">
            <div class="flex items-center space-x-3 mb-3">
              <span class="text-2xl">{project.icon}</span>
              <h4 class="text-lg font-semibold text-gray-900 dark:text-white">{project.title}</h4>
            </div>
            <p class="text-gray-600 dark:text-gray-300 mb-4">{project.description}</p>
            {project.demo && (
              <a
                href={project.demo}
                target="_blank"
                rel="noopener noreferrer"
                class="inline-flex items-center space-x-2 px-3 py-2 bg-blue-600 text-white text-sm rounded-lg hover:bg-blue-700 transition-colors"
              >
                <ExternalLink class="w-4 h-4" />
                <span>{project.title === "Animdle" ? "Play" : "Demo"}</span>
              </a>
            )}
          </div>
        ))}
      </div>
    </div>
  </div>
</section>
